# ===============================
#         Data Source
# ===============================
spring.datasource.url= jdbc:postgresql://localhost:5432/PennySaved
spring.datasource.username=postgres
spring.datasource.password=Fballer1!
spring.datasource.platform=postgres
spring.datasource.name=PennySaved

# ===============================
#            Tomcat
# ===============================
server.address=127.0.0.1
server.error.whitelabel.enabled=false
server.tomcat.accesslog.enabled=true

# ===============================
#        JPA / HIBERNATE
# ===============================
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
hibernate.format_sql=true

# ===============================
#            Logging
# ===============================
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG
logging.level.root=WARN

# ===============================
#           Thymeleaf
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ===============================
#        Spring Security
# ===============================
spring.queries.users-query=select email, password, '1' as enabled from auth_user where email=? and status='VERIFIED'
spring.queries.roles-query=select u.email, r.role_name from auth_user u inner join auth_user_role ur on(u.auth_user_id=ur.auth_user_id) inner join auth_role r on(ur.auth_role_id=r.auth_role_id) where u.email=?
spring.security.user.name=shawn
spring.security.user.password=roberts